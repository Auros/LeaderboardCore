<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LeaderboardCore</name>
    </assembly>
    <members>
        <member name="T:LeaderboardCore.Interfaces.INotifyLeaderboardLoad">
            <summary>
            Implement this interface to be notified of ScoreSaber's leaderboard getting loaded/failing to load.
            </summary>
        </member>
        <member name="M:LeaderboardCore.Interfaces.INotifyLeaderboardLoad.OnLeaderboardLoaded(System.Boolean)">
            <summary>
            Called when ScoreSaber's loaded state changes.
            <param name="loaded"></param>
            </summary>
        </member>
        <member name="T:LeaderboardCore.Interfaces.INotifyScoreUpload">
            <summary>
            Implement this interface to be notified if ScoreSaber just uploaded a score.
            </summary>
        </member>
        <member name="M:LeaderboardCore.Interfaces.INotifyScoreUpload.OnScoreUploaded">
            <summary>
            Called when a score is uploaded.
            </summary>
        </member>
        <member name="T:LeaderboardCore.Managers.CustomLeaderboardManager">
            <summary>
            Class for the Leaderboard Manager. Use it to register and unregister yourself. Requires Zenject to recieve the instance (installed in menu scene).
            </summary>
        </member>
        <member name="M:LeaderboardCore.Managers.CustomLeaderboardManager.Register(LeaderboardCore.Models.CustomLeaderboard)">
            <summary>
            Registers a <see cref="T:LeaderboardCore.Models.CustomLeaderboard"/> to the manager.
            <param name="customLeaderboard"></param>
            </summary>
        </member>
        <member name="M:LeaderboardCore.Managers.CustomLeaderboardManager.Unregister(LeaderboardCore.Models.CustomLeaderboard)">
            <summary>
            Removes a <see cref="T:LeaderboardCore.Models.CustomLeaderboard"/> from the manager.
            <param name="customLeaderboard"></param>
            </summary>
        </member>
        <member name="T:LeaderboardCore.Models.CustomLeaderboard">
            <summary>
            Abstract class for the Custom Leaderboard. Must provide the panel and leaderboard views.
            </summary>
        </member>
        <member name="P:LeaderboardCore.Models.CustomLeaderboard.panelViewController">
            <summary>
            The ViewController for the leaderboard's panel.
            </summary>
        </member>
        <member name="P:LeaderboardCore.Models.CustomLeaderboard.leaderboardViewController">
            <summary>
            The ViewController for the leaderboard itself.
            </summary>
        </member>
        <member name="M:LeaderboardCore.Plugin.OnEnable">
            <summary>
            Called when the plugin is enabled (including when the game starts if the plugin is enabled).
            </summary>
        </member>
        <member name="M:LeaderboardCore.Plugin.OnDisable">
            <summary>
            Called when the plugin is disabled and on Beat Saber quit. It is important to clean up any Harmony patches, GameObjects, and Monobehaviours here.
            The game should be left in a state as if the plugin was never started.
            Methods marked [OnDisable] must return void or Task.
            </summary>
        </member>
        <member name="M:LeaderboardCore.Plugin.ApplyHarmonyPatches">
            <summary>
            Attempts to apply all the Harmony patches in this assembly.
            </summary>
        </member>
        <member name="M:LeaderboardCore.Plugin.RemoveHarmonyPatches">
            <summary>
            Attempts to remove all the Harmony patches that used our HarmonyId.
            </summary>
        </member>
    </members>
</doc>
